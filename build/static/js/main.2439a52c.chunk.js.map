{"version":3,"sources":["Digi.js","DigiGrid.js","App.js","index.js"],"names":["Digi","props","callClick","e","setTimeout","this","toggle","detail","bind","timeScale","countDown","countValue","count","setState","digiValue","newClick","newClickId","uuidv4","state","clickIds","newDigiValue","newClickIds","row","col","map","digiLocation","window","dispatchEvent","CustomEvent","countingDown","addEventListener","onClick","className","colors","Component","DigiGrid","width","height","displayCharacters","displayColors","createMyRow","myRow","i","push","myCol","createMyCols","myDigi","chars","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAIqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAcVC,UAAY,SAACC,GACTC,WACI,WACIC,KAAKC,OAAOH,EAAEI,SAEjBC,KAHD,gBAIA,EAAKP,MAAMQ,YArBD,EAyBlBC,UAAY,SAACC,GACT,IAAIC,EAAQD,EACE,IAAVC,EACAR,WACI,WACIC,KAAKQ,SAAS,CAACC,UAAUF,EAAOF,WAAW,KAE9CF,KAHD,gBAIqB,GAArB,EAAKP,MAAMQ,WAKfL,WACI,WACIQ,IACAP,KAAKQ,SAAS,CAACC,UAAUF,EAAOF,WAAW,IAG3CL,KAAKK,UAAUE,IAElBJ,KAPD,gBAQqB,GAArB,EAAKP,MAAMQ,YA/CL,EAoDlBM,SAAW,WACP,IAAMC,EAAaC,eACnB,EAAKX,OAAOU,IAtDE,EA0DlBV,OAAS,SAACU,GACN,IAAK,EAAKE,MAAMC,SAASH,GAAY,CACjC,IAAMI,EAAe,EAAKF,MAAMJ,UAAY,EAExCO,EAAc,EAAKH,MAAMC,SAa7B,GAZAE,EAAYL,GAAc,EAE1B,EAAKH,SAAS,CAACC,UAAUM,EAAcD,SAASE,IAE7B,CACf,QAAQ,EAAKpB,MAAMqB,IAAI,GAAG,OAAQ,EAAKrB,MAAMsB,IAC7C,QAAQ,EAAKtB,MAAMqB,IAAI,GAAG,OAAQ,EAAKrB,MAAMsB,IAC7C,OAAQ,EAAKtB,MAAMqB,IAAK,QAAQ,EAAKrB,MAAMsB,IAAI,GAC/C,OAAQ,EAAKtB,MAAMqB,IAAK,QAAQ,EAAKrB,MAAMsB,IAAI,IAExCC,KAAI,SAAAC,GAAY,OAAIC,OAAOC,cAAc,IAAIC,YAAY,UAAUH,EAAa,CAAElB,OAAQS,SAErE,IAA5B,EAAKE,MAAMW,aAAuB,CAGlC,EAAKhB,SAAS,CAACH,WADE,IAEjB,EAAKA,UAAUU,MA5EvB,EAAKF,MAAQ,CACTJ,UAAW,EACXK,SAAU,GACVU,cAAc,GANJ,E,qDAUlB,WAEI,IAAMJ,EAAe,cAAcpB,KAAKJ,MAAMqB,IAAI,OAAOjB,KAAKJ,MAAMsB,IACpEG,OAAOI,iBAAiBL,EAAcpB,KAAKH,a,oBAuE/C,WACI,OACI,qBAAK6B,QAAS1B,KAAKU,SAAUiB,UAAW3B,KAAKJ,MAAMgC,OAAO5B,KAAKa,MAAMJ,WAArE,SACKT,KAAKa,MAAMJ,gB,GAxFMoB,aCCnB,SAASC,EAAT,GAAsC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAEhCC,EAAoB,CAAC,IAAI,IAAI,IAAI,IAAI,KACrCC,EAAgB,CAAC,SAAS,SAAS,SAAS,SAAS,UAU3D,SAASC,IAEL,IADA,IAAMC,EAAQ,GACLC,EAAE,EAAGA,EAAIN,EAAOM,IACrBD,EAAME,KAAKD,GAEf,OAAOD,EAGX,OAhBA,WAEI,IADA,IAAMG,EAAQ,GACLF,EAAE,EAAGA,EAAIL,EAAQK,IACtBE,EAAMD,KAAKD,GAEf,OAAOE,EAYPC,GAAerB,KAAI,SAAAoB,GACf,OACA,qBAAoBZ,UAAU,oBAA9B,SACKQ,IAAchB,KAAI,SAAAsB,GACf,OACI,cAAC,EAAD,CAEAxB,IAAOwB,EACPvB,IAAMqB,EACNnC,UAAa,IACbsC,MAAST,EACTL,OAAUM,GALLtB,oBAJPA,mBChBP+B,MAVf,WACE,OACE,mCACA,qBAAKhB,UAAU,OAAf,SACA,cAAC,EAAD,CAAUI,MAAU,KAAOC,OAAW,YCF1CY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2439a52c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Digi.css'\n\nexport default class Digi extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            digiValue: 0,\n            clickIds: {},\n            countingDown: false,\n        }\n    }\n\n    componentDidMount(){\n        //console.log('mounted '+ this.props.row + ' ' + this.props.col)\n        const digiLocation = 'clickedrow:'+this.props.row+'col:'+this.props.col\n        window.addEventListener(digiLocation, this.callClick)\n    }\n    callClick = (e) => {\n        setTimeout(\n            function() {\n                this.toggle(e.detail)\n            }\n            .bind(this),\n            this.props.timeScale\n        );\n    }\n\n    countDown = (countValue) => {\n        let count = countValue\n        if (count === 0){\n            setTimeout(\n                function() {\n                    this.setState({digiValue:count, countDown: false})\n                }\n                .bind(this),\n                this.props.timeScale*10\n            );\n        }\n\n        else{\n            setTimeout(\n                function() {\n                    count--\n                    this.setState({digiValue:count, countDown: true})\n                    // unfortunately I had to code this recursively to get it to work\n                    // and iterative approach utilizing \"while\" just locks up the program\n                    this.countDown(count) \n                }\n                .bind(this),\n                this.props.timeScale*10\n            );\n        }\n    }\n\n    newClick = () => {\n        const newClickId = uuidv4()\n        this.toggle(newClickId)\n    }\n\n    // needs to be formatted as an arrow function to force a binding to the class. so weird\n    toggle = (newClickId) => {\n        if (!this.state.clickIds[newClickId]){\n            const newDigiValue = this.state.digiValue + 1\n\n            var newClickIds = this.state.clickIds\n            newClickIds[newClickId] = 1\n\n            this.setState({digiValue:newDigiValue, clickIds:newClickIds})\n\n            const clickArray = [\n                'row:'+(this.props.row+1)+'col:'+(this.props.col),\n                'row:'+(this.props.row-1)+'col:'+(this.props.col),\n                'row:'+(this.props.row)+'col:'+(this.props.col+1),\n                'row:'+(this.props.row)+'col:'+(this.props.col-1)\n            ]\n            clickArray.map(digiLocation => window.dispatchEvent(new CustomEvent('clicked'+digiLocation,{ detail: newClickId })))\n            \n            if (this.state.countingDown === false){\n                //console.log('countdown')\n                const counting = true\n                this.setState({countDown: counting})\n                this.countDown(newDigiValue)\n            }\n        \n        }\n    }\n    render() {\n        return (\n            <div onClick={this.newClick} className={this.props.colors[this.state.digiValue]}>\n                {this.state.digiValue}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport './DigiGrid.css'\nimport Digi from './Digi'\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function DigiGrid({ width, height }) {\n\n    const displayCharacters = ['=','*','#','$','@']\n    const displayColors = ['stage1','stage2','stage3','stage4','stage5']\n\n    function createMyCols(){\n        const myCol = []\n        for( var i=0; i < height; i++ ){\n            myCol.push(i)\n        }\n        return myCol\n    }\n\n    function createMyRow(){\n        const myRow = []\n        for( var i=0; i < width; i++ ){\n            myRow.push(i)\n        }\n        return myRow\n    }\n\n    return (\n        createMyCols().map(myCol => {\n            return (\n            <div key={uuidv4()} className=\"flexbox-container\">\n                {createMyRow().map(myDigi => {\n                    return (\n                        <Digi \n                        key={uuidv4()} \n                        row = {myDigi} \n                        col ={myCol} \n                        timeScale = {100} \n                        chars = {displayCharacters}\n                        colors = {displayColors}\n                        />\n                    )\n                })\n            }\n            </div>\n            )\n        })\n\n    )\n    \n}\n","import './App.css';\nimport DigiGrid from './DigiGrid'\n\nfunction App() {\n  return (\n    <>\n    <div className=\"grid\">\n    <DigiGrid width = { '30' } height = { '15' } />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}